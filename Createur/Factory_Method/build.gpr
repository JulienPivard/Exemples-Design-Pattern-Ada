--  Dernière modification : Mercredi 20 septembre[09] 2017
--  Auteur : PIVARD Julien

project Build is

    --  Les énumérations sont des types accepté.
    type Style_Type     is ( "debug", "release" );

    --  Le premier paramètre est le nom de la variable.
    --  Le second paramètre est la valeur par défaut.
    --  A utiliser avec
    --  -d pour afficher la progression et -p pour créer les dossier
    --  gprbuild -d -p -Pbuild.gpr -Xmode=release
    style   : Style_Type        := external( "mode", "debug" );
    procedure_principal         := "client";
    nom_executable              := "executable";

    --  Le nom du fichier qui contient la procédure principale.
    for Main        use ( procedure_principal );

    --  Pour ignorer des fichiers sources de la compilation
    for Ignore_Source_Sub_Dirs use ( ".git" );
    --  Le ** permet d'inclure tous les sous répertoire.
    for Source_Dirs use ( "src/**" );

    for Object_Dir  use "obj/" & style;
    for Exec_Dir    use "bin/" & style;

    --  https://gcc.gnu.org/onlinedocs/gcc-4.7.4/gnat_ugn_unw/Switches-for-gcc.html
    --  gnatef est la pour afficher le chemin complet des fichiers dans les
    --  messages erreurs et avertissements.
    --  gnatU : Permet de marquer les messages erreurs avec le tag error:
    --  gnatw.Y désactive le message qui dit pourquoi la spec nécessite un corps.
    --  gnatw.e active les avertissements pour les variables non utilisé.
    --  gnatif pour pouvoir utiliser les accents dans les noms de variables.
    --  gnatW8 Pour que l'encodage du code source se fasse en UTF8
    --  Similaire à ajouter le pragma Wide_Character_Encoding (UTF8)
    --  gnatyy équivaut à 3aAbcefhiklmnprst
    --  gnaty
    --  4 : taille indentation.
    --  a : vérifie la casse;
    --  A : Préciser le numéro du tableau dans les attributs quand multidimension
    --  b : aucuns espaces en fin de ligne;
    --  B : Interdit and/or simple sauf cas particulier and then or else requis
    --  c : style des commentaires avec deux espaces;
    --  d : Pas de fin de ligne windows; e : vérifie le nom des blocs et exit;
    --  f : Pas de tabulation verticale;
    --  h : pas de caractères tabulation; i : vérifie la position du then du if;
    --  k : vérifie la casse des mots réservé qui doivent être en minuscule;
    --  l : Vérifie la position de certains mots clef les uns par rapport aux autres;
    --  m : Taille maximum des lignes 79
    --  n : Vérifie la casse des noms standard
    --  O : Overrid doit être marqué
    --  r : Vérifie que la casse des identificateurs est cohérente tout le long.
    --  s : Vérifie que tout corps possède une partie spécification séparée.
    --  S : Pas de code sur la même ligne que then ou else
    --  t : Les espaces dans les lignes
    --  n : vérifie la casse des entités standard; p : vérifie la casse des pragma;
    --  u : vérifie les lignes vide; x : vérifie les parenthèses inutile;
    Options :=
        (
            "-gnata",
            "-gnatef",
            "-gnatU",
            "-gnat2012",
            "-gnatyy",
            "-gnaty4BdOSux",
            "-gnatw.e",
            "-gnatw.Y",
            "-gnatW8",
            "-gnatif"
        );

    --  Pour un bon tuto https://docs.adacore.com/gprbuild-docs/html/gprbuild_ug.html
    ----------------------------------------------------------------------------
    package Naming is   --<<<  Pour changer les noms

        --  Pour lier le nom dans le code et le nom du fichier de spec qui le contient
        --for Spec( "MyPack.MyChild" ) use "mypack.mychild.spec";
        --  Même chose mais pour le corps.
        --for Body( "MyPack.MyChild" ) use "mypack.mychild.body";

    end Naming;

    --  package Binder          for command BIND (invoking gnatbind)
    --  package Check           for command CHECK (invoking gnatcheck)
    --  package Compiler        for command COMP or COMPILE (invoking the compiler)
    --  package Cross_Reference for command XREF (invoking gnatxref)
    --  package Eliminate       for command ELIM (invoking gnatelim)
    --  package Finder          for command FIND (invoking gnatfind)
    --  package Gnatls          for command LS or LIST (invoking gnatls)
    --  package Gnatstub        for command STUB (invoking gnatstub)
    --  package Linker          for command LINK (invoking gnatlink)
    --  package Check           for command CHECK (invoking gnatcheck)
    --  package Metrics         for command METRIC (invoking gnatmetric)
    --  package Pretty_Printer  for command PP or PRETTY (invoking gnatpp)
    ----------------------------------------------------------------------------
    package Builder is  --<<<  pour gprbuild

        --  Pour changer le nom de l'exécutable de client à client après le use.
        case style is
            when "debug" | "release" =>
                for Executable( "client" ) use nom_executable;
        end case;

    end Builder;

    ----------------------------------------------------------------------------
    package Compiler is --<<<  pour le compiler

        case style is
            when "debug" =>
                for Default_Switches( "Ada" ) use Options & ( "-g" );
            when "release" =>
                for Default_Switches( "Ada" ) use Options & ( "-O3" );
        end case;

    end Compiler;

    ----------------------------------------------------------------------------
    package Cross_Reference is  --<<<  Pour gnatxref

        for Default_Switches( "Ada" ) use
            (
                "-f",
                "-v",
                "-u",
                "-d"
            );

    end Cross_Reference;

    --  Uniquement pour ada.
    --  Vas créer des fichiers « sources » pour élaborer les interruptions
    --  initialiser les variables globales ...
    ----------------------------------------------------------------------------
    package Binder is   --<<<  pour le binder
    end Binder;

    ----------------------------------------------------------------------------
    package Linker is   --<<<  pour le linker
    end Linker;

end Build;
